{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/statistics/Notification.js","components/statistics/Statistics.js","components/section/Section.js","data/index.js","components/main/Main.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","name","title","type","onClick","Notification","message","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","values","statsOptions","total","totalOptions","option","value","Section","children","data","titleOptions","Main","state","good","neutral","bad","language","handleLangChange","e","target","setState","handleGoodFeedback","prevState","result","Math","ceil","this","feedback","onChange","stats","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a5db497.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"feedbackOptions\">\r\n      <div className=\"counterControls\">\r\n        {options.map(({ name, title }) => (\r\n          <button type=\"button\" name={name} onClick={onLeaveFeedback}>\r\n            {title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport \"../main/Main.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"statsList\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst Statistics = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  values,\r\n  statsOptions,\r\n}) => {\r\n  const total = countTotalFeedback();\r\n\r\n  const totalOptions = statsOptions.map((option) => {\r\n    let value = 0;\r\n\r\n    switch (option.name) {\r\n      case \"total\":\r\n        value = countTotalFeedback();\r\n        break;\r\n      case \"feedback\":\r\n        value = countPositiveFeedbackPercentage();\r\n        break;\r\n      default:\r\n        value = values[option.name];\r\n    }\r\n\r\n    return {\r\n      ...option,\r\n      value,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul className=\"statsList\">\r\n          {totalOptions.map(({ title, name, value }) => (\r\n            <li className=\"statsListItem\">\r\n              <b>{title}: </b>\r\n              {value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given yet\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import options from \"./options.json\";\r\nimport statsOptions from \"./statsOptions.json\";\r\nimport titleOptions from \"./titleOptions.json\";\r\n\r\nconst data = { options, statsOptions, titleOptions };\r\nexport default data;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport Section from \"../section/Section\";\r\nimport \"./Main.css\";\r\nimport data from \"../../data\";\r\n\r\nconst { options, statsOptions, titleOptions } = data;\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    language: \"en\",\r\n  };\r\n\r\n  handleLangChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ language: value });\r\n  };\r\n\r\n  handleGoodFeedback = (e) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        [e.target.name]: prevState[e.target.name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const result = Math.ceil(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n    return `${result}%`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section\r\n          className=\"sectionTitle\"\r\n          title={titleOptions[this.state.language].feedback}\r\n        >\r\n          <select name=\"language\" onChange={this.handleLangChange}>\r\n            <option value=\"en\">English</option>\r\n            <option value=\"ru\">Русский</option>\r\n          </select>\r\n\r\n          <FeedbackOptions\r\n            options={options[this.state.language]}\r\n            onLeaveFeedback={this.handleGoodFeedback}\r\n          />\r\n        </Section>\r\n        <Section\r\n          className=\"sectionTitle\"\r\n          title={titleOptions[this.state.language].stats}\r\n        >\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            values={this.state}\r\n            statsOptions={statsOptions[this.state.language]}\r\n            countTotalFeedback={this.countTotalFeedback}\r\n            countPositiveFeedbackPercentage={\r\n              this.countPositiveFeedbackPercentage\r\n            }\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/main/Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}